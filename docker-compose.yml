#container for Apache
#container for celery[deprecated]
#use watchTower container
#use github actions

# version: "3.8"
# services: 
#   imageflow:
#     build: .
#     volumes:
#       - .:/django
#     ports:
#       - 8000:8000

#     networks:

#     image: imageflow:django
#     container_name: django_container
#     command: python DDI_Website/manage.py runserver 0.0.0.0:8000
#     depends_on: 
#       - db
#     restart: unless-stopped
    
#   db: 
#     image: postgres
#     volumes:
#       - ./data/db:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=postgres
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#     container_name: postgres_db
#     restart: unless-stopped

#   worker:
#     command: celery -A Website_Settings worker -l info

#add rabbitMq

#   rabbitmq:
#     image: rabbitmq:3.6.10
#     volumes:
#       - media:/code/media

#   worker:
#     build: ./docker/
#     command: celery -A example_worker worker --loglevel=debug -n worker1.%h
#     volumes:
#       - .:/code
#       - media:/code/media
#     depends_on:
#       - db
#       - rabbitmq
# volumes:
#   media: 


version: "3.8"


services:
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  imageflow:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
  celery:
    build: .
    command: celery -A Website_Settings worker -l info
    volumes:
      - .:/app
    depends_on:
      - imageflow



  # watchtower:
  #   container_name: watchtower
  #   image: containrrr/watchtower
  #   command:
  #     - --cleanup
  #     - --interval=300
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   restart: unless-stopped 
